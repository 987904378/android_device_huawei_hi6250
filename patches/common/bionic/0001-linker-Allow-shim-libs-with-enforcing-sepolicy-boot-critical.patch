From b71f9a872af5e24e80d8fe4367ffe7170e2d474a Mon Sep 17 00:00:00 2001
From: Meticulus <theonejohnnyd@gmail.com>
Date: Sat, 16 Dec 2017 15:59:25 -0600
Subject: [PATCH] 
 "0001-linker-Allow-shim-libs-with-enforcing-sepolicy-boot-critical
 _______________________________

*Previous From b46b35e2b863f853a933c365d20d4889d3383492 Mon Sep 17 00:00:00 2001
*Previous From: Meticulus <theonejohnnyd@gmail.com>
*Previous Date: Tue, 12 Dec 2017 05:41:34 -0600
*Previous Subject: [PATCH]
*"0001-linker-Allow-shim-libs-with-enforcing-sepolicy-boot-critical
*_______________________________
*
**Previous From c3dd6d4148b3710b8b472f5b18c81680c4bd29c8 Mon Sep 17 00:00:00 2001
**Previous From: Meticulus <theonejohnnyd@gmail.com>
**Previous Date: Mon, 13 Nov 2017 11:04:12 -0600
**Previous Subject: [PATCH]
**"0001-linker-Allow-shim-libs-with-enforcing-sepolicy-boot-critical
**_______________________________
**
***Previous From 14b890bcf49207871cfc6b1a73a1304f39fc92fb Mon Sep 17 00:00:00 2001
***Previous From: Meticulus <theonejohnnyd@gmail.com>
***Previous Date: Fri, 10 Nov 2017 03:38:01 -0600
***Previous Subject: [PATCH]
***"0001-linker-Allow-shim-libs-with-enforcing-sepolicy-boot-critical
***_______________________________
***
****Previous From a883e096f5e679976a71ff5e16f39b3a16239939 Mon Sep 17 00:00:00 2001
****Previous From: Meticulus <theonejohnnyd@gmail.com>
****Previous Date: Sat, 24 Dec 2016 23:49:04 -0600
****Previous Subject: [PATCH] 0001-linker-Allow-shim-libs-with-enforcing-sepolicy
****
****Change-Id: I09ecbdfe092879e0227f29b989d0a2eda0c59909"
***
***Change-Id: I19bce9795e1d7e88119f9c16bc5213192080513f"
**
**Change-Id: Ie1b4f393df88a6d3b6ee83050ab6ef316c00b1e3""
---
 linker/Android.bp      | 1 +
 linker/linker.cpp      | 8 ++++----
 linker/linker_main.cpp | 7 ++++++-
 3 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/linker/Android.bp b/linker/Android.bp
index 029807a..ed0558d 100644
--- a/linker/Android.bp
+++ b/linker/Android.bp
@@ -86,6 +86,7 @@ cc_binary {
         "-Wextra",
         "-Wunused",
         "-Werror",
+	"-DLD_SHIM_LIBS=\"/hwvendor/lib/hw/audio.primary.hisi.so|libshim_icu.so:/hwvendor/lib/hw/audio.primary.hisi.so|libshim.so:/hwvendor/lib64/libcamera_algo.so|libshim_libui.so:/hwvendor/lib64/hw/fingerprint.hi6250.so|libshim.so:/hwvendor/lib64/hwcam/hwcam.hi6250.m.VENUS.so|libshim_libui.so:/hwvendor/lib64/hwcam/hwcam.hi6250.m.VENUS.so|libshim.so\"",
     ],
 
     // TODO: split out the asflags.
diff --git a/linker/linker.cpp b/linker/linker.cpp
index 3d6fdf9..a4580e1 100644
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -1046,8 +1046,8 @@ static int open_library_in_zipfile(ZipArchiveCache* zip_archive_cache,
   if (realpath_fd(fd, realpath)) {
     *realpath += separator;
   } else {
-    PRINT("warning: unable to get realpath for the library \"%s\". Will use given path.",
-          normalized_path.c_str());
+    //PRINT("warning: unable to get realpath for the library \"%s\". Will use given path.",
+     //     normalized_path.c_str());
     *realpath = normalized_path;
   }
 
@@ -1084,7 +1084,7 @@ static int open_library_on_paths(ZipArchiveCache* zip_archive_cache,
       if (fd != -1) {
         *file_offset = 0;
         if (!realpath_fd(fd, realpath)) {
-          PRINT("warning: unable to get realpath for the library \"%s\". Will use given path.", buf);
+          //PRINT("warning: unable to get realpath for the library \"%s\". Will use given path.", buf);
           *realpath = buf;
         }
       }
@@ -1117,7 +1117,7 @@ static int open_library(android_namespace_t* ns,
       if (fd != -1) {
         *file_offset = 0;
         if (!realpath_fd(fd, realpath)) {
-          PRINT("warning: unable to get realpath for the library \"%s\". Will use given path.", name);
+          //PRINT("warning: unable to get realpath for the library \"%s\". Will use given path.", name);
           *realpath = name;
         }
       }
diff --git a/linker/linker_main.cpp b/linker/linker_main.cpp
index ac73920..7e5281e 100644
--- a/linker/linker_main.cpp
+++ b/linker/linker_main.cpp
@@ -261,9 +261,14 @@ static ElfW(Addr) __linker_init_post_relocation(KernelArgumentBlock& args, ElfW(
     if (ldpreload_env != nullptr) {
       INFO("[ LD_PRELOAD set to \"%s\" ]", ldpreload_env);
     }
-    ldshim_libs_env = getenv("LD_SHIM_LIBS");
   }
 
+#ifdef LD_SHIM_LIBS
+  ldshim_libs_env = LD_SHIM_LIBS;
+#else
+  ldshim_libs_env = getenv("LD_SHIM_LIBS");
+#endif
+ 
   struct stat file_stat;
   // Stat "/proc/self/exe" instead of executable_path because
   // the executable could be unlinked by this point and it should
-- 
2.7.4

