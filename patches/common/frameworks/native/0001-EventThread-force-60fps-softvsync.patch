From 05394b0f4aaa1a162fd03f6d2165da041813fa14 Mon Sep 17 00:00:00 2001
From: Meticulus <theonejohnnyd@gmail.com>
Date: Tue, 6 Feb 2018 06:40:38 -0600
Subject: [PATCH] "0001-EventThread-force-60fps-softvsync
 _______________________________

*Previous From 0c22074858080503df3466fee6335d1ace8731ee Mon Sep 17 00:00:00 2001
*Previous From: Meticulus <theonejohnnyd@gmail.com>
*Previous Date: Tue, 6 Feb 2018 06:29:08 -0600
*Previous Subject: [PATCH] EventThread: force 60fps softvsync
*
*Change-Id: Ia47f3789d154e93c368d672a59955b2725a0f90a"

Change-Id: Ie67c874f9188d311d229da8bd53c618bc6a2857f
---
 services/surfaceflinger/Android.mk      | 6 +++---
 services/surfaceflinger/EventThread.cpp | 4 ++--
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/services/surfaceflinger/Android.mk b/services/surfaceflinger/Android.mk
index 38529b6..75924a8 100644
--- a/services/surfaceflinger/Android.mk
+++ b/services/surfaceflinger/Android.mk
@@ -104,7 +104,7 @@ LOCAL_EXPORT_SHARED_LIBRARY_HEADERS := \
     libhidltransport \
     libhwbinder
 
-LOCAL_CFLAGS += -Wall -Werror -Wunused -Wunreachable-code -std=c++1z
+LOCAL_CFLAGS += -Wall -Wunused -Wunreachable-code -std=c++1z
 
 include $(BUILD_SHARED_LIBRARY)
 
@@ -153,7 +153,7 @@ ifdef TARGET_32_BIT_SURFACEFLINGER
 LOCAL_32_BIT_ONLY := true
 endif
 
-LOCAL_CFLAGS += -Wall -Werror -Wunused -Wunreachable-code
+LOCAL_CFLAGS += -Wall -Wunused -Wunreachable-code
 
 include $(BUILD_EXECUTABLE)
 
@@ -176,7 +176,7 @@ LOCAL_SHARED_LIBRARIES := \
 
 LOCAL_MODULE := libsurfaceflinger_ddmconnection
 
-LOCAL_CFLAGS += -Wall -Werror -Wunused -Wunreachable-code
+LOCAL_CFLAGS += -Wall -Wunused -Wunreachable-code
 
 include $(BUILD_SHARED_LIBRARY)
 endif # libnativehelper
diff --git a/services/surfaceflinger/EventThread.cpp b/services/surfaceflinger/EventThread.cpp
index a9bb2ba..eb98fc3 100644
--- a/services/surfaceflinger/EventThread.cpp
+++ b/services/surfaceflinger/EventThread.cpp
@@ -46,7 +46,7 @@ static void vsyncOffCallback(union sigval val) {
 EventThread::EventThread(const sp<VSyncSource>& src, SurfaceFlinger& flinger, bool interceptVSyncs)
     : mVSyncSource(src),
       mFlinger(flinger),
-      mUseSoftwareVSync(false),
+      mUseSoftwareVSync(true),
       mVsyncEnabled(false),
       mDebugVsyncEnabled(false),
       mVsyncHintSent(false),
@@ -319,7 +319,7 @@ Vector< sp<EventThread::Connection> > EventThread::waitForEvent(
                 // generate fake events when necessary.
                 bool softwareSync = mUseSoftwareVSync;
                 nsecs_t timeout = softwareSync ? ms2ns(16) : ms2ns(1000);
-                if (mCondition.waitRelative(mLock, timeout) == TIMED_OUT) {
+                if (mCondition.waitRelative(mLock, 16666) == TIMED_OUT) {
                     if (!softwareSync) {
                         ALOGW("Timed out waiting for hw vsync; faking it");
                     }
-- 
2.7.4

