From 643df70b890f861b8c6c56c9ade926991efeb59f Mon Sep 17 00:00:00 2001
From: Meticulus <theonejohnnyd@gmail.com>
Date: Tue, 20 Mar 2018 13:00:41 -0500
Subject: [PATCH] "0001-libf2fs-Bypass-in-use-checks
 _______________________________

*Previous From 4faf88d09fb5630596998553b8b60842dd2ad4bb Mon Sep 17 00:00:00 2001
*Previous From: Meticulus <theonejohnnyd@gmail.com>
*Previous Date: Sat, 2 Dec 2017 07:47:48 -0600
*Previous Subject: [PATCH] libf2fs: Bypass 'in use' checks
*
*-See comments in patch.
*
*Change-Id: If86a7646de8b4b8bc56d184e41ca6e76c41d36df"

Change-Id: I9f6240b4a588489f9ec980579b877a851e001b18
---
 lib/libf2fs.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/lib/libf2fs.c b/lib/libf2fs.c
index 31836db..d25cf28 100644
--- a/lib/libf2fs.c
+++ b/lib/libf2fs.c
@@ -644,6 +644,7 @@ int f2fs_dev_is_umounted(char *path)
 	 * If f2fs is umounted with -l, the process can still use
 	 * the file system. In this case, we should not format.
 	 */
+#if 0
 	if (stat(path, &st_buf) == 0 && S_ISBLK(st_buf.st_mode)) {
 		int fd = open(path, O_RDONLY | O_EXCL);
 
@@ -654,6 +655,7 @@ int f2fs_dev_is_umounted(char *path)
 			return -1;
 		}
 	}
+#endif
 	return 0;
 }
 
-- 
2.7.4

